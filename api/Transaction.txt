@Deprecated public final int getMaxRetry()
@Deprecated public final T setMaxRetry(int count)
@Nullable public final Hbar getMaxTransactionFee()
@Nullable public final java.util.List<AccountId> getNodeAccountIds()
@Nullable public final org.threeten.bp.Duration getTransactionValidDuration()
public byte[] getTransactionHash()
public byte[] toBytes()
public final Hbar getDefaultMaxTransactionFee()
public final int getMaxAttempts()
public final java.lang.String getTransactionMemo()
public final org.threeten.bp.Duration getMaxBackoff()
public final org.threeten.bp.Duration getMinBackoff()
public final TransactionId getTransactionId()
public final T setMaxAttempts(int maxAttempts)
public final T setMaxBackoff(org.threeten.bp.Duration maxBackoff)
public final T setMaxTransactionFee(Hbar maxTransactionFee)
public final T setMinBackoff(org.threeten.bp.Duration minBackoff)
public final T setNodeAccountIds(java.util.List<AccountId> nodeAccountIds)
public final T setTransactionId(TransactionId transactionId)
public final T setTransactionMemo(java.lang.String memo)
public final T setTransactionValidDuration(org.threeten.bp.Duration validDuration)
public final T sign(PrivateKey privateKey)
public java8.util.concurrent.CompletableFuture<TransactionResponse> executeAsync(Client client)
public java.lang.String toString()
public java.util.Map<AccountId,byte[]> getTransactionHashPerNode()
public java.util.Map<AccountId,java.util.Map<PublicKey,byte[]>> getSignatures()
public ScheduleCreateTransaction schedule()
public static Transaction<?> fromBytes(byte[] bytes) throws com.google.protobuf.InvalidProtocolBufferException
public static Transaction<?> fromScheduledTransaction(com.hedera.hashgraph.sdk.proto.SchedulableTransactionBody scheduled)
public T addSignature(PublicKey publicKey, byte[] signature)
public T freeze()
public T freezeWith(@Nullable Client client)
public TransactionResponse execute(Client client, org.threeten.bp.Duration timeout) throws java.util.concurrent.TimeoutException, PrecheckStatusException
public TransactionResponse execute(Client client) throws java.util.concurrent.TimeoutException, PrecheckStatusException
public T signWithOperator(Client client)
public T signWith(PublicKey publicKey, java8.util.function.Function<byte[],byte[]> transactionSigner)
